Description: >
    This template contains the security groups required by our entire stack.
    We create them in a seperate nested template, so they can be referenced
    by all of the other nested templates.

Parameters:
    
    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String
    
    VPC:
        Type: AWS::EC2::VPC::Id
        Description: Choose which VPC the security groups should be deployed to

Resources:

    # This security group defines who/where is allowed to access the Bastion host.
    # By default we allow access from the internet via SSH.
    BastionSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Security group for Bastion instances
            SecurityGroupIngress:
              - IpProtocol: tcp
                FromPort: 22
                ToPort: 22
                CidrIp: "0.0.0.0/0"
            VpcId:
                !Ref VPC
            Tags: 
                - Key: Name
                  Value: !Sub ${EnvironmentName}-Bastion

    # This security group defines who/where is allowed to access the Fargate 'backend' tasks.
    # By default we've opened it up to allow access from the ALB security group only.
    #
    # Remove any of the following ingress rules that are not needed.
    FargateBackendSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Access to the Fargate backend tasks
            VpcId: !Ref 'VPC'
            Tags: 
                - Key: Name
                  Value: !Sub ${EnvironmentName}-FargateBackend
    FargateBackendSecurityGroupIngressFromLoadBalancer:
        Type: AWS::EC2::SecurityGroupIngress
        Properties:
            Description: Ingress from the load balancer security group
            GroupId: !Ref FargateBackendSecurityGroup
            IpProtocol: -1
            SourceSecurityGroupId: !Ref LoadBalancerSecurityGroup
    FargateBackendSecurityGroupIngressFromBastionSecurityGroup:
        Type: AWS::EC2::SecurityGroupIngress
        Properties:
            Description: Ingress from the bastion security group
            FromPort: 22
            GroupId: !Ref FargateBackendSecurityGroup
            IpProtocol: tcp
            SourceSecurityGroupId: !Ref BastionSecurityGroup
            ToPort: 22

    # This security group defines who/where is allowed to access the Fargate 'worker' tasks.
    # By default we've opened it up to allow access from the 'backend' tasks only.
    #
    # Remove any of the following ingress rules that are not needed.
    FargateWorkerSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Access to the Fargate worker tasks
            VpcId: !Ref 'VPC'
            Tags: 
                - Key: Name
                  Value: !Sub ${EnvironmentName}-FargateWorkers
    FargateWorkerSecurityGroupIngressFromBackend:
        Type: AWS::EC2::SecurityGroupIngress
        Properties:
            Description: Ingress from the backend security group
            GroupId: !Ref FargateWorkerSecurityGroup
            IpProtocol: -1
            SourceSecurityGroupId: !Ref FargateBackendSecurityGroup
    FargateWorkerSecurityGroupIngressFromBastionSecurityGroup:
        Type: AWS::EC2::SecurityGroupIngress
        Properties:
            Description: Ingress from the bastion security group
            FromPort: 22
            GroupId: !Ref FargateWorkerSecurityGroup
            IpProtocol: tcp
            SourceSecurityGroupId: !Ref BastionSecurityGroup
            ToPort: 22

    # This security group defines who/where is allowed to access the Application Load Balancer.
    # By default, we've opened this up to the public internet (0.0.0.0/0) but can you restrict
    # it further if you want.
    LoadBalancerSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties: 
            VpcId: !Ref VPC
            GroupDescription: Access to the load balancer that sits in front of ECS
            SecurityGroupIngress:
                # Allow access from anywhere to our ECS services
                - CidrIp: 0.0.0.0/0
                  IpProtocol: -1
            Tags: 
                - Key: Name
                  Value: !Sub ${EnvironmentName}-LoadBalancers

Outputs:

    BastionSecurityGroup:
        Description: A reference to the security group for the bastion host
        Value: !Ref BastionSecurityGroup

    FargateBackendSecurityGroup:
        Description: A reference to the security group for Fargate backend tasks
        Value: !Ref FargateBackendSecurityGroup

    FargateWorkerSecurityGroup:
        Description: A reference to the security group for Fargate worker tasks
        Value: !Ref FargateWorkerSecurityGroup

    LoadBalancerSecurityGroup:
        Description: A reference to the security group for load balancers
        Value: !Ref LoadBalancerSecurityGroup

